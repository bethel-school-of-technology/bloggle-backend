CREATE TABLE Users(
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    UserName VARCHAR(40) NOT NULL,
    Password VARCHAR(80) NOT NULL,
	Email VARCHAR(40) NOT NULL,
    FirstName VARCHAR(40) NOT NULL,
    LastName VARCHAR(40) NOT NULL,
    Location VARCHAR(40) NOT NULL,
	IsAdmin INTEGER DEFAULT 0 NOT NULL,
	IsBand INTEGER DEFAULT 0 NOT NULL,
    Img CHAR(10000) DEFAULT NULL, //base64 encoded - encoded using ascii characters //profile image
	TotalRating DOUBLE DEFAULT NULL, //calculated by adding together all average values on each rated post
	RatedPosts INTEGER DEFAULT 0, //all posts rated
	TotalPosts INTEGER DEFAULT 0, //increase by 1 when a new post has been created (non-draft)
	Followings VARCHAR(1400) DEFAULT NULL
)

considering creating a table or index for emails and usernames

CREATE TABLE Posts(
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
	UserId INTEGER NOT NULL,
    Message VARCHAR(12500) NOT NULL,
    DateCreated DATETIME DEFAULT(datetime('now')),
    DateModified DATETIME DEFAULT NULL,
	RatingValue DOUBLE DEFAULT NULL, //updated when a new rating is given
    RatingCount INTEGER DEFAULT NULL, //updated when a new rating is given
	IsDraft INTEGER DEFAULT 0 NOT NULL,
	TotalComments INTEGER DEFAULT 0 NOT NULL,
	FOREIGN KEY(userID) REFERENCES Users(ID)
)

CREATE TABLE Comments(
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Message VARCHAR(1000) NOT NULL,
	UserId INTEGER NOT NULL,
	PostId INTEGER NOT NULL,
	IsDraft INTEGER DEFAULT 0,
	ReportCount INTEGER DEFAULT NULL,
    FOREIGN KEY(userId) REFERENCES Users(Id),
    FOREIGN KEY(postId) REFERENCES Posts(Id)
)

CREATE TABLE Ratings(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
	UserId INTEGER NOT NULL,
	PostId INTEGER NOT NULL,
    Rating NUMERIC(1,1),
	FOREIGN KEY(UserId) REFERENCES Users(Id),
    FOREIGN KEY(PostId) REFERENCES Posts(Id)
)

CREATE TABLE Reports(
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
	UserId INTEGER NOT NULL,
	PostId INTEGER NOT NULL,
	DateCreated DATETIME DEFAULT(datetime('now')),
	Message VARCHAR(12500) NOT NULL,
    FOREIGN KEY(PserId) REFERENCES Users(Id),
    FOREIGN KEY(PostId) REFERENCES Posts(Id)
)
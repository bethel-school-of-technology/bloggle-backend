Needed headers:
"Content-Type" : "application/json"
"Authorization" : "Bearer token_value"

Users Controller methods: api/users

GET: //get a list of all users
GET: profile/{username}
GET: usernameSearch/{username} //find a user matching that username
GET: nameSearch/{name}
GET: followList //get all users being followed
POST: //Create a user
PUT: //Edit a users info
PUT: //follow/{username} //add a user to following string
PUT: unfollow/{username} //unfollow a user you currently follow
POST: delete/{id} //delete a user by their id (need to be an admin)


Login Controller methods:
POST: api/Login //returns an access token.
GET: confirmToken //confirm if token is valid

Posts Controller methods: api/posts
GET: //get all posts in descending order by date created
GET: user/{username} //get all posts from specific user
GET: post/{postId} //get specific post
GET: feed //get all recent posts from those you follow
GET: drafts //get all drafts
GET: draft/{draftId} //grab post matching the post id given
POST: {Message:string, IsDraft:int (not required)} //submit a post by the currently logged in user. Can give a value to IsDraft
PUT: {Post}//edits a prexisting post by logged in user
POST: delete/{Post}//deletes a prexisting post from logged in user

Comment Controller Methods: api/comments
GET: post/{postId} //get all comments for post
GET comment/{comment id} //get a specific comment
POST: {Message:string, UserId:int, PostId:int, IsDraft:int (not required)}
PUT: {Comment}
DELETE: {Comment}

Rating Controller Methods: api/ratings
GET: all/{postId} //get all posts for specificed post
GET: rating/{postId} //get the logged in users rating for specificed post
POST: //includes post and put functionallity for ratings (adds or modifies depending on whether a rating exists)

Report Controller Methods: api/reports
GET: //grab all submitted reports. They are in descending order(admin only)
GET: report/{reportId} //grab a specific report(admin only)
GET: post/{postId} //grab all reports about a post (admin only)
POST: {PostId:int, UserId:int}//allows a user to post a report
DELETE: {Report obj}(admin only)